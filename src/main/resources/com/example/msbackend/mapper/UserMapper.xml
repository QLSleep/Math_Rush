<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.msbackend.mapper.UserMapper">
    <!-- 定义UserInfoVO的结果映射 -->
    <resultMap id="UserInfoVOMap" type="com.example.msbackend.vo.UserInfoVO">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="email" column="email"/>
        <result property="createdAt" column="createdAt"/>
        <result property="updatedAt" column="updatedAt"/>
        <collection property="roles" ofType="java.lang.String">
            <constructor>
                <arg column="role_name"/>
            </constructor>
        </collection>
    </resultMap>
    
    <!-- 查询用户基本信息 -->
    <select id="getUserInfo" resultMap="UserInfoVOMap">
        SELECT
            u.id,
            u.username,
            u.email,
            u.created_at AS createdAt,
            u.updated_at AS updatedAt,
            r.name AS role_name
        FROM sys_user u
        LEFT JOIN sys_user_role ur ON u.id = ur.user_id
        LEFT JOIN sys_role r ON ur.role_id = r.id
        WHERE u.username = #{username}
    </select>

    <insert id="insertUser" useGeneratedKeys="true" keyProperty="id">
        <!-- 插入用户信息 -->
        INSERT INTO sys_user (
            username,
            password,
            email,
            status,
            created_at,
            updated_at
        ) VALUES (
            #{username},
            #{password},
            #{email},
            1,  -- 默认为正常状态
            CURRENT_TIMESTAMP,
            CURRENT_TIMESTAMP
        )
    </insert>
    
    <!-- 检查用户名或邮箱是否已存在 -->
    <select id="checkUsernameOrEmailExists" resultType="java.lang.Boolean">
        SELECT COUNT(*) > 0
        FROM sys_user
        WHERE username = #{username} OR email = #{email}
    </select>

    <!-- 根据用户名和邮箱查询用户ID -->
    <select id="getUserByUsernameAndEmail" resultType="java.lang.Long">
        SELECT id
        FROM sys_user
        WHERE username = #{username} AND email = #{email}
    </select>

    <!-- 检查新用户名是否已被其他用户使用（排除当前用户） -->
    <select id="checkUsernameExistsExcludeCurrent" resultType="java.lang.Boolean">
        SELECT COUNT(*) > 0
        FROM sys_user
        WHERE username = #{newUsername}
        AND NOT (username = #{currentUsername} AND email = #{currentEmail})
    </select>

    <!-- 检查新邮箱是否已被其他用户使用（排除当前用户） -->
    <select id="checkEmailExistsExcludeCurrent" resultType="java.lang.Boolean">
        SELECT COUNT(*) > 0
        FROM sys_user
        WHERE email = #{newEmail}
        AND NOT (username = #{currentUsername} AND email = #{currentEmail})
    </select>

    <!-- 更新用户信息 -->
    <update id="updateUserInfo">
        UPDATE sys_user
        SET 
            username = #{newUsername},
            email = #{newEmail},
            updated_at = CURRENT_TIMESTAMP
        WHERE id = #{id}
    </update>

    <!-- 获取用户密码信息用于密码修改 -->
    <select id="getChangePwdDTO" resultType="com.example.msbackend.dto.ChangePwdDTO">
        SELECT 
            id as userId,
            password
        FROM sys_user
        WHERE username = #{username}
    </select>

    <!-- 修改用户密码 -->
    <update id="changePwd">
        UPDATE sys_user
        SET 
            password = #{password},
            updated_at = CURRENT_TIMESTAMP
        WHERE id = #{userId}
    </update>

    <!-- 获取用户密码信息用于用户注销 -->
    <select id="getCancelUserDTO" resultType="com.example.msbackend.dto.CancelUserDTO">
        SELECT 
            id as userId,
            password
        FROM sys_user
        WHERE username = #{username}
    </select>

    <!-- 设置用户状态（如注销） -->
    <update id="setUserStatus">
        UPDATE sys_user
        SET 
            status = #{status},
            updated_at = CURRENT_TIMESTAMP
        WHERE id = #{id}
    </update>
    
    <!-- 物理删除用户 -->
    <delete id="deleteUserById">
        DELETE FROM sys_user
        WHERE id = #{id}
    </delete>
    

</mapper>